name: Small World Propensity

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures tags are fetched

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: pipx install poetry

      - name: Install dependencies
        run: poetry install

      - name: Prepare package for release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch --tags --force
          current_version=$(poetry run semantic-release print-version --current --verbosity=DEBUG)
          echo "Current version: $current_version"
          poetry run semantic-release publish --verbosity=DEBUG
          version=$(poetry version --short)
          echo "Version: $version"
          echo "::set-output name=version::$version"
      # Update the changlog, toml and version
      - name: Commit and Push Changes
        run: |
          git add pyproject.toml small_world_propensity/__init__.py CHANGELOG.md
          git commit -m "chore(release): update versions and changelog [skip ci]"
          git push origin ${GITHUB_REF#refs/heads/}
      # Publish to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API }}
      # Create GitHub Release
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.semantic.outputs.version }}
          release_name: v${{ steps.semantic.outputs.version }}
          body: "Description of the release"
          draft: false
          prerelease: false
        